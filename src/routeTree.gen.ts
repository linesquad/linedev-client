/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SigninImport } from './routes/signin'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedProfileImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedtaskTasksImport } from './routes/_authenticated/(task)/tasks'
import { Route as AuthenticateddashboardSeniorDashboardImport } from './routes/_authenticated/(dashboard)/seniorDashboard'
import { Route as AuthenticateddashboardMiddleDashboardImport } from './routes/_authenticated/(dashboard)/middleDashboard'
import { Route as AuthenticateddashboardJuniorDashboardImport } from './routes/_authenticated/(dashboard)/juniorDashboard'
import { Route as AuthenticateddashboardClientDashboardImport } from './routes/_authenticated/(dashboard)/clientDashboard'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SigninRoute = SigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedProfileRoute = AuthenticatedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedtaskTasksRoute = AuthenticatedtaskTasksImport.update({
  id: '/(task)/tasks',
  path: '/tasks',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticateddashboardSeniorDashboardRoute =
  AuthenticateddashboardSeniorDashboardImport.update({
    id: '/(dashboard)/seniorDashboard',
    path: '/seniorDashboard',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticateddashboardMiddleDashboardRoute =
  AuthenticateddashboardMiddleDashboardImport.update({
    id: '/(dashboard)/middleDashboard',
    path: '/middleDashboard',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticateddashboardJuniorDashboardRoute =
  AuthenticateddashboardJuniorDashboardImport.update({
    id: '/(dashboard)/juniorDashboard',
    path: '/juniorDashboard',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticateddashboardClientDashboardRoute =
  AuthenticateddashboardClientDashboardImport.update({
    id: '/(dashboard)/clientDashboard',
    path: '/clientDashboard',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/(dashboard)/clientDashboard': {
      id: '/_authenticated/(dashboard)/clientDashboard'
      path: '/clientDashboard'
      fullPath: '/clientDashboard'
      preLoaderRoute: typeof AuthenticateddashboardClientDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/(dashboard)/juniorDashboard': {
      id: '/_authenticated/(dashboard)/juniorDashboard'
      path: '/juniorDashboard'
      fullPath: '/juniorDashboard'
      preLoaderRoute: typeof AuthenticateddashboardJuniorDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/(dashboard)/middleDashboard': {
      id: '/_authenticated/(dashboard)/middleDashboard'
      path: '/middleDashboard'
      fullPath: '/middleDashboard'
      preLoaderRoute: typeof AuthenticateddashboardMiddleDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/(dashboard)/seniorDashboard': {
      id: '/_authenticated/(dashboard)/seniorDashboard'
      path: '/seniorDashboard'
      fullPath: '/seniorDashboard'
      preLoaderRoute: typeof AuthenticateddashboardSeniorDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/(task)/tasks': {
      id: '/_authenticated/(task)/tasks'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedtaskTasksImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticateddashboardClientDashboardRoute: typeof AuthenticateddashboardClientDashboardRoute
  AuthenticateddashboardJuniorDashboardRoute: typeof AuthenticateddashboardJuniorDashboardRoute
  AuthenticateddashboardMiddleDashboardRoute: typeof AuthenticateddashboardMiddleDashboardRoute
  AuthenticateddashboardSeniorDashboardRoute: typeof AuthenticateddashboardSeniorDashboardRoute
  AuthenticatedtaskTasksRoute: typeof AuthenticatedtaskTasksRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticateddashboardClientDashboardRoute:
    AuthenticateddashboardClientDashboardRoute,
  AuthenticateddashboardJuniorDashboardRoute:
    AuthenticateddashboardJuniorDashboardRoute,
  AuthenticateddashboardMiddleDashboardRoute:
    AuthenticateddashboardMiddleDashboardRoute,
  AuthenticateddashboardSeniorDashboardRoute:
    AuthenticateddashboardSeniorDashboardRoute,
  AuthenticatedtaskTasksRoute: AuthenticatedtaskTasksRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/clientDashboard': typeof AuthenticateddashboardClientDashboardRoute
  '/juniorDashboard': typeof AuthenticateddashboardJuniorDashboardRoute
  '/middleDashboard': typeof AuthenticateddashboardMiddleDashboardRoute
  '/seniorDashboard': typeof AuthenticateddashboardSeniorDashboardRoute
  '/tasks': typeof AuthenticatedtaskTasksRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/clientDashboard': typeof AuthenticateddashboardClientDashboardRoute
  '/juniorDashboard': typeof AuthenticateddashboardJuniorDashboardRoute
  '/middleDashboard': typeof AuthenticateddashboardMiddleDashboardRoute
  '/seniorDashboard': typeof AuthenticateddashboardSeniorDashboardRoute
  '/tasks': typeof AuthenticatedtaskTasksRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_authenticated/(dashboard)/clientDashboard': typeof AuthenticateddashboardClientDashboardRoute
  '/_authenticated/(dashboard)/juniorDashboard': typeof AuthenticateddashboardJuniorDashboardRoute
  '/_authenticated/(dashboard)/middleDashboard': typeof AuthenticateddashboardMiddleDashboardRoute
  '/_authenticated/(dashboard)/seniorDashboard': typeof AuthenticateddashboardSeniorDashboardRoute
  '/_authenticated/(task)/tasks': typeof AuthenticatedtaskTasksRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/signin'
    | '/signup'
    | '/profile'
    | '/clientDashboard'
    | '/juniorDashboard'
    | '/middleDashboard'
    | '/seniorDashboard'
    | '/tasks'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/signin'
    | '/signup'
    | '/profile'
    | '/clientDashboard'
    | '/juniorDashboard'
    | '/middleDashboard'
    | '/seniorDashboard'
    | '/tasks'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/signin'
    | '/signup'
    | '/_authenticated/profile'
    | '/_authenticated/(dashboard)/clientDashboard'
    | '/_authenticated/(dashboard)/juniorDashboard'
    | '/_authenticated/(dashboard)/middleDashboard'
    | '/_authenticated/(dashboard)/seniorDashboard'
    | '/_authenticated/(task)/tasks'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/signin",
        "/signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/profile",
        "/_authenticated/(dashboard)/clientDashboard",
        "/_authenticated/(dashboard)/juniorDashboard",
        "/_authenticated/(dashboard)/middleDashboard",
        "/_authenticated/(dashboard)/seniorDashboard",
        "/_authenticated/(task)/tasks"
      ]
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/_authenticated/profile": {
      "filePath": "_authenticated/profile.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/(dashboard)/clientDashboard": {
      "filePath": "_authenticated/(dashboard)/clientDashboard.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/(dashboard)/juniorDashboard": {
      "filePath": "_authenticated/(dashboard)/juniorDashboard.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/(dashboard)/middleDashboard": {
      "filePath": "_authenticated/(dashboard)/middleDashboard.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/(dashboard)/seniorDashboard": {
      "filePath": "_authenticated/(dashboard)/seniorDashboard.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/(task)/tasks": {
      "filePath": "_authenticated/(task)/tasks.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
